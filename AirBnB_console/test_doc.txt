======= test_base_model.py ======

TBASE-ID: test id is a uuid4 string
TBASE-CA
TBASE-CA: test created_at is a datetime object
TBASE-UA: test updated_at is not None object.
TBASE-UA: test updated_at is a datetime object.
TBASE-SV: test updated_at was updated on save.
TBASE-TD: test that to_dict produces expected keys
TBASE-TD: test that to_dict returns type dict
TBASE-ST: test that __str__() returns a string object
TBASE-ST: test that __str__ returns a string for the right class



======= test_user.py ======

TUSER-EM: test if email is a string object
TUSER-PW: test if password is a string object
TUSER-FN: test if first_name is a string object
TUSER-LN: test if last_name is a string object
TUSER-ID: test id is a uuid4 string
TUSER-CA: test that created at exists
TUSER-CA: test created_at is a datetime object
TUSER-UA: test updated_at is not None object.
TUSER-UA: test updated_at is a datetime object.
TUSER-SV: test updated_at was updated on save.
TUSER-TD: test that to_dict produces expected keys
TUSER-TD: test that to_dict returns type dict
TUSER-ST: test that __str__() returns a string object



======= test_place.py ======

TPLAC-CI: test if city_id is a string object
TPLAC-UI: test if city_id is a string object
TPLAC-NM: test if name is a string object
TPLAC-DS: test if description is a string object
TPLAC-NR: test if name is an int object
TPLAC-NB: test if number_bathrooms is an int object
TPLAC-MG: test if max_guest is an int object
TPLAC-PN: test if price_by_night is an int object
TPLAC-LA: test if latitude is a float object
TPLAC-LO: test if longitude is a float object
TPLAC-AI: test if amenity_ids is a list object
TPLAC-ID: test id is a uuid4 string
TPLAC-CA: confirm created_at exists
TPLAC-CA: test created_at is a datetime object
TPLAC-UA: test updated_at is not None object.
TPLAC-UA: test updated_at is a datetime object.
TPLAC-SV: test updated_at was updated on save.
TPLAC-TD: test that to_dict produces expected keys
TPLAC-TD: test that to_dict returns type dict
TPLAC-ST: test that __str__() returns a string object



======= test_state.py ======

TSTAT-NM: test if name is a string object
TSTAT-ID: test id is a uuid4 string
TSTAT-CA: test that create_at exists
TSTAT-CA: test created_at is a datetime object
TSTAT-UA: test updated_at is not None object.
TSTAT-UA: test updated_at is a datetime object.
TSTAT-SV: test updated_at was updated on save.
TSTAT-TD: test that to_dict produces expected keys
TSTAT-TD: test that to_dict returns type dict
TSTAT-ST: test that __str__() returns a string object



======= test_city.py ======

TCITY-NM: test if name is a string object
TCITY-SI: test if state_id is a string
TCITY-ID: test id is a uuid4 string
TCITY-CA: confirm that created at exists
TCITY-CA: test created_at is a datetime object
TCITY-UA: test updated_at is not None object.
TCITY-UA: test updated_at is a datetime object.
TCITY-SV: test updated_at was updated on save.
TCITY-TD: test that to_dict produces expected keys
TCITY-TD: test that to_dict returns type dict
TCITY-ST: test that __str__() returns a string object



======= test_amenity.py ======

TAMEN-NM: test if name is a string object
TAMEN-ID: test id is a uuid4 string
TAMEN-CA: Confirm that created_at exists
TAMEN-CA: test created_at is a datetime object
TAMEN-UA: test updated_at is not None object.
TAMEN-UA: test updated_at is a datetime object.
TAMEN-SV: test updated_at was updated on save.
TAMEN-TD: test that to_dict produces expected keys
TAMEN-TD: test that to_dict returns type dict
TAMEN-ST: test that __str__() returns a string object



======= test_review.py ======

TREVI-PI: test if place_id is a string object
TREVI-UI: test if user_id is a string object
TREVI-TX: test if text is a string object
TREVI-ID: test id is a uuid4 string
TREVI-CA: enure created_at exists
TREVI-CA: test created_at is a datetime object
TREVI-UA: test updated_at is not None object.
TREVI-UA: test updated_at is a datetime object.
TREVI-SV: test updated_at was updated on save.
TREVI-TD: test that to_dict produces expected keys
TREVI-TD: test that to_dict returns type dict
TREVI-ST: test that __str__() returns a string object
